name: 監査・内部統制機能テスト

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'core/evidence/**'
      - 'core/policy/**' 
      - 'core/blocks/processing/control/**'
      - 'core/reviewer/**'
      - 'core/ui/auth.py'
      - 'tests/**'
      - 'requirements.txt'
      - 'pytest.ini'
  pull_request:
    branches: [ main ]
    paths:
      - 'core/evidence/**'
      - 'core/policy/**'
      - 'core/blocks/processing/control/**' 
      - 'core/reviewer/**'
      - 'core/ui/auth.py'
      - 'tests/**'
      - 'requirements.txt'
      - 'pytest.ini'

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11"]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Cache pip dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Set Python path
      run: echo "PYTHONPATH=${{ github.workspace }}" >> $GITHUB_ENV
    
    - name: Run unit tests
      run: |
        python -m pytest -m unit tests/ -v --tb=short
    
    - name: Run integration tests
      run: |
        python -m pytest -m integration tests/ -v --tb=short
    
    - name: Run security tests
      run: |
        python -m pytest -m security tests/ -v --tb=short
    
    - name: Generate coverage report
      run: |
        python -m pytest tests/ --cov=core --cov-report=xml --cov-report=html -m "not slow"
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage.xml
        flags: audit-controls
        name: audit-controls-coverage
        fail_ci_if_error: false

  e2e-tests:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Run E2E tests
      run: |
        python -m pytest -m e2e tests/ -v --tb=short
    
    - name: Run performance tests
      run: |
        python -m pytest -m slow tests/ -v --tb=short
      continue-on-error: true

  security-scan:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install bandit safety
    
    - name: Run security scan with bandit
      run: |
        bandit -r core/evidence/ core/policy/ core/blocks/processing/control/ core/reviewer/ core/ui/auth.py -f json -o bandit-report.json || true
    
    - name: Check dependencies for vulnerabilities
      run: |
        safety check --json --output safety-report.json || true
    
    - name: Upload security reports
      uses: actions/upload-artifact@v4
      with:
        name: security-reports
        path: |
          bandit-report.json
          safety-report.json
      if: always()

  audit-compliance:
    runs-on: ubuntu-latest
    needs: [test, e2e-tests]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Run audit compliance tests
      run: |
        python -m pytest -m audit tests/ -v --tb=short
    
    - name: Generate test evidence report
      run: |
        python scripts/run_tests.py --type all --coverage || echo "Test execution completed with warnings"
    
    - name: Upload test artifacts
      uses: actions/upload-artifact@v4
      with:
        name: test-evidence
        path: |
          htmlcov/
          .coverage
      if: always()
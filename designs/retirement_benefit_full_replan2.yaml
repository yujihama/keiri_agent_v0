apiVersion: v1
id: retirement_benefit
version: 1.0.0
vars:
  instruction: 退職給付金の計算
policy:
  on_error: continue
  retries: 0
ui:
  layout: [upload_files,select_quarter] #
graph:
  # -1) 対象ファイルのアップロード（CSV/Excel）
  - id: upload_files
    description: 入力ファイル（給与CSV・元帳CSV・ワークブック）をアップロード
    block: ui.interactive_input
    in:
      mode: collect
      requirements:
        - { id: salary_csv, type: file, label: "給与明細一覧表.csv", required: true, description: "CSVをアップロード" }
        - { id: ledger_csv, type: file, label: "退職給付金勘定元帳.csv", required: true, description: "CSVをアップロード" }
        - { id: workbook, type: file, label: "退職給付ワークブック.xlsx", required: true, description: "テンプレート/直前期のExcelをアップロード", accept: ".xlsx" }
    out:
      collected_data: uploaded
  # 0.5) 給与明細CSVの形式選択（縦持ち or 横持ちピボット）
  # - id: select_salary_format
  #   description: 給与明細のCSV形式を選択
  #   block: ui.interactive_input
  #   in:
  #     mode: inquire
  #     message: "給与明細CSVの形式を選択してください"
  #     requirements:
  #       - { id: salary_format, type: select, label: "給与明細形式", options: ["normal","pivot"], default: "normal", required: true }
  #   out:
  #     collected_data: format
  # 0) 四半期の入力（UI）
  - id: select_quarter
    description: 会計年度と四半期を入力
    block: ui.interactive_input
    in:
      mode: inquire
      message: "対象の会計期間を教えてください"
      requirements:
        - { id: fiscal_year, type: select, label: "会計年度 (YYYY)", options: ["2024","2025","2026"], default: "2025", required: true,  hint: "通常は現在の年度を選択してください。例：2024年4月-2025年3月は2024年度" }
        - { id: quarter, type: select, label: "四半期", options: ["Q1","Q2","Q3","Q4"], default: "Q1", required: true }
    out:
      collected_data: qin

  # 1) 四半期から期間・シート名・1Q判定を算出
  - id: compute_q
    description: 四半期から期間・シート名・1Q判定を算出
    block: transforms.compute_fiscal_quarter
    in:
      fiscal_year: ${select_quarter.qin.fiscal_year}
      quarter: ${select_quarter.qin.quarter}
      start_month: 4
    out:
      period: period
      is_q1: is_q1
      target_sheet_name: target_sheet_name
      template_sheet_name: template_sheet_name
      quarter_label: quarter_label

  # 1) 給与明細表・退職給付引当元帳のCSV読み込み
  # 1-a) 縦持ち（通常）CSV の読み込み
  - id: read_salary
    description: 給与明細CSVを読み込み（縦持ち）
    block: file.read_csv
    in:
      bytes: ${upload_files.uploaded.salary_csv}
      encoding: utf-8
      delimiter: ","
      has_header: true
    out:
      rows: salary_rows_raw

  # 1-b) 横持ち（ピボット）CSV の読み込み（Shift_JIS想定）
  - id: read_salary_pivot
    description: 給与明細CSVを読み込み（横持ちピボット）
    block: file.read_csv
    in:
      bytes: ${upload_files.uploaded.salary_csv}
      encoding: cp932
      delimiter: ","
      has_header: true
    out:
      rows: salary_pivot_rows_raw

  # 1-c) 横持ち→縦持ちへ変換（unpivot -> pivot）
  - id: unpivot_salary
    description: ピボット表をアンピボット
    block: table.unpivot
    in:
      rows: ${read_salary_pivot.salary_pivot_rows_raw}
      id_vars: ""
      var_name: "氏名"
      value_name: "value"
    out:
      rows: salary_unpivot_rows
    # when:
    #   expr: ${select_salary_format.format.salary_format} == "pivot"

  - id: pivot_salary_to_rows
    description: 社員番号ごとの行に復元
    block: table.pivot
    in:
      rows: ${unpivot_salary.salary_unpivot_rows}
      index: "氏名"
      columns: ""
      values: "value"
      aggfunc: first
      flatten_multiindex: true
    out:
      rows: salary_rows_raw
    # when:
    #   expr: ${select_salary_format.format.salary_format} == "pivot"
  # 1-e) ラベル行（1行目）を正規ヘッダへ割当（case-insensitive rename）
  - id: rename_salary_fields
    description: ラベル行の日本語項目名を正規キーに揃える
    block: transforms.rename_fields
    in:
      items: ${combine_salary_rows.salary_rows}
      rename:
        "": 社員番号
        支給日: 支給日
        生年月日: 生年月日
        役職: 役職
        採用年月日: 採用年月日
        退職年月日: 退職年月日
        基本給: 基本給
        諸手当: 諸手当
        総支給額: 総支給額
        控除額: 控除額
        差引支給額: 差引支給額
    out:
      rows: salary_rows_normalized


  # 1-d) 入力形式に応じて正規化（どちらかの rows を採用）
  - id: combine_salary_rows
    description: 給与明細行の統一
    block: transforms.flatten_items
    in:
      results_list:
        - { items: "${read_salary.salary_rows_raw}" }
        - { items: "${pivot_salary_to_rows.salary_rows_raw}" }
    out:
      items: salary_rows

  - id: read_ledger
    description: 退職給付金勘定元帳CSVを読み込み
    block: file.read_csv
    in:
      bytes: ${upload_files.uploaded.ledger_csv}
      encoding: utf-8
      delimiter: ","
      has_header: true
    out:
      rows: ledger_rows

  # 2) 期間フィルタ: 当四半期に入社した社員（給与明細表）
  - id: filter_joined
    description: 当四半期に入社した社員を抽出
    block: transforms.filter
    in:
      items: ${rename_salary_fields.salary_rows_normalized}
      conditions:
        - { field: "採用年月日", operator: "between", value: "${compute_q.period.start}", value2: "${compute_q.period.end}" }
    out:
      filtered: joined_in_q

  # 2.5) 役職名の正規化（置換）
  - id: normalize_roles
    description: 役職名の表記ゆれを正規化
    block: transforms.replace_values
    in:
      items: ${filter_joined.joined_in_q}
      rules:
        - field: "役職"
          match: "equals"
          case_insensitive: false
          mappings:
            - { from: "管理社員", to: "管理者" }
            - { from: "スペシャリスト契約社員", to: "ｽﾍﾟｼｬﾘｽﾄ契約社員" }
    out:
      rows: joined_in_q_normalized

  # 2.6) Excel 転記前の型変換（社員番号: number / 採用年月日: date）
  - id: coerce_for_excel
    description: Excel で適切なセル型となるように値を型変換
    block: transforms.coerce_values
    in:
      items: ${normalize_roles.joined_in_q_normalized}
      specs:
        - { field: "社員番号", type: "number" }
        - { field: "採用年月日", type: "date", formats: ["%Y-%m-%d","%Y/%m/%d","%Y-%m-%d %H:%M:%S","%Y/%m/%d %H:%M:%S"] }
    out:
      rows: joined_in_q_typed

  # 3) 期間フィルタ: 当四半期に退職した社員（給与明細表）
  - id: filter_retired
    description: 当四半期に退職した社員を抽出
    block: transforms.filter
    in:
      items: ${rename_salary_fields.salary_rows_normalized}
      conditions:
        - { field: "退職年月日", operator: "between", value: "${compute_q.period.start}", value2: "${compute_q.period.end}" }
    out:
      filtered: retired_in_q

  # 4) Excel更新（テンプレート複製、C2/E4/J3/K列、入社/退職情報の反映）
  - id: update_workbook_base
    description: シート複製と日付・数式の初期更新
    block: excel.update_workbook
    in:
      workbook:
        name: "退職給付ワークブック.xlsx"
        bytes: ${upload_files.uploaded.workbook}
      operations:
        # 4-1: テンプレートシートを複製（前四半期 → 当四半期）
        - { type: copy_sheet, sheet_name: "${compute_q.template_sheet_name}", target: "${compute_q.target_sheet_name}" }
        # 4-2: C2セルへ期末日（YYYY-MM-DD）
        # - { type: update_cells, sheet_name: "${compute_q.target_sheet_name}", target: "B2", data: "${compute_q.period.end}" }
        # 4-3: E4セルへ期首日（YYYY-MM-DD）
        - { type: update_cells, sheet_name: "${compute_q.target_sheet_name}", target: "E4", data: "${compute_q.period.start}" }
        # 4-4: J3セルの式の参照先シート名を前四半期に置換（replace_in_formulas）
        - type: replace_in_formulas
          sheet_name: "${compute_q.target_sheet_name}"
          range: "J3"
          search: "'[0-9]{4}\\.(?:1[0-2]|[1-9])'"
          replace: "'${compute_q.template_sheet_name}'"
          regex: true
        # 4-5: 第1四半期のみ B2 を当年度に更新
        - type: update_cells_if
          sheet_name: "${compute_q.target_sheet_name}"
          condition: ${compute_q.is_q1}
          cells:
            "B2": "${select_quarter.qin.fiscal_year}"
        # 4-6: 第1四半期のみ K列の式内 "XXXX.3" の XXXX を当年度に置換
        - type: replace_in_formulas
          sheet_name: "${compute_q.target_sheet_name}"
          range: "K:K"
          search: "([0-9]{4})\\.3"
          replace: "${select_quarter.qin.fiscal_year}.3"
          regex: true
          condition: ${compute_q.is_q1}
    out:
      workbook_updated: wb_stage1


  # 5) 入社・退職情報の反映（追記/更新）
  - id: update_workbook_people
    description: 入社の追記・退職者更新・年度繰越のクリア
    block: excel.write
    in:
      workbook: ${update_workbook_base.wb_stage1}
      column_updates:
        - sheet: "${compute_q.target_sheet_name}"
          header_row: 1
          start_row: 2
          append: true
          write_header: false
          columns:
            - { header: "社員番号", path: "社員番号" }
            - { header: "氏名", path: "氏名" }
            - { header: "役職", path: "役職" }
            - { header: "採用年月日", path: "採用年月日" }
          values: ${coerce_for_excel.joined_in_q_typed}
      cell_updates:
        - sheet: "${compute_q.target_sheet_name}"
          cells:
            F2: ""
      # 退職者更新の着色・列更新は旧 update_workbook の機能に依存するため、別ノードで実施
    out:
      workbook_updated: wb_people

  # 5-2) 退職者の既存行を社員番号で特定し、退職年月日を更新しつつ A~P 列をグレー塗り（excel.write: match_updates）
  - id: update_retired_rows
    description: 退職者の行更新とグレー塗り（統一書き込み）
    block: excel.write
    in:
      workbook: ${update_workbook_people.wb_people}
      match_updates:
        - sheet: "${compute_q.target_sheet_name}"
          key_column: "A"
          key_field: "社員番号"
          start_row: 2
          items: ${filter_retired.retired_in_q}
          update_columns:
            "退職年月日": "E"
          fill_range_columns: "A:P"
          fill_color: "#D9D9D9"
    out:
      workbook_updated: wb_people2

  # 5-3) 年度繰越時（1Q）のみ F2 をクリア（当年度支払い金額欄のリセット）
  - id: clear_f2_if_q1
    description: 第1四半期のみ F2 をクリア
    block: excel.update_workbook
    in:
      workbook: ${update_retired_rows.wb_people2}
      operations:
        - type: clear_cells_if
          sheet_name: "${compute_q.target_sheet_name}"
          targets: ["F2"]
          condition: ${compute_q.is_q1}
    out:
      workbook_updated: wb_people_final

  # 6) 更新後シートを読み取り、H列が●の社員を抽出（退職者マーク）
  - id: read_updated_sheet
    description: 再計算後のシートを読み取り
    block: excel.read_data
    in:
      workbook: ${clear_f2_if_q1.wb_people_final}
      recalc:
        enabled: true
        engine: libreoffice
      read_config:
        sheets:
          - { name: "${compute_q.target_sheet_name}", header_row: 1, range: "A7:P34"}
    out:
      data: current_sheet_data

  # 動的シート名の行配列を抽出
  - id: pick_current_sheet_rows
    description: 対象シートの行配列を取得
    block: transforms.pick
    in:
      source: ${read_updated_sheet.current_sheet_data}
      path: ${compute_q.target_sheet_name}
      return: object
    out:
      value: current_sheet_rows

  - id: filter_marked_retirees
    description: 支給確認フラグが●の行を抽出
    block: transforms.filter
    in:
      items: ${pick_current_sheet_rows.current_sheet_rows}
      conditions:
        - { field: "退職金支給確認フラグ", operator: "eq", value: "●" }
    out:
      filtered: retirees_marked

  # 7) 元帳の候補行を決定論的に抽出（当四半期、支払勘定のみ）
  - id: filter_ledger_candidates
    description: 元帳から支払該当行を抽出（普通預金/未払金、期間内）
    block: transforms.filter
    in:
      items: ${read_ledger.ledger_rows}
      conditions:
        - { field: "相手方勘定科目名", operator: "in", value: ["普通預金", "未払金"] }
        - { field: "伝票日付", operator: "between", value: "${compute_q.period.start}", value2: "${compute_q.period.end}" }
    out:
      filtered: ledger_candidates

  # 8) 金額一致で結合し、Excel転記用の行配列を生成
  - id: join_retirees_ledger
    description: 退職者の見込額と元帳の借方金額を一致させて支給額・給付日を作成
    block: transforms.join
    in:
      left: ${filter_marked_retirees.retirees_marked}
      right: ${filter_ledger_candidates.ledger_candidates}
      left_key: "退職手当（見込）（円）"
      right_key: "借方"
      strategy: first
      select:
        社員番号: "left.社員番号"
        退職金支給額: "right.借方"
        退職金給付日: "right.伝票日付"
    out:
      rows: matched_results

  # 10) 突合結果を Excel に反映（F, G）
  - id: update_workbook_benefits
    description: 支給額・給付日をExcelへ転記
    block: excel.update_workbook
    in:
      workbook: ${clear_f2_if_q1.wb_people_final}
      operations:
        - type: update_rows_by_match
          sheet_name: "${compute_q.target_sheet_name}"
          key: "社員番号"
          key_column: "A"
          items: "${join_retirees_ledger.matched_results}"
          update_columns:
            "退職金支給額": "F"
            "退職金給付日": "G"
    out:
      workbook_updated: wb



